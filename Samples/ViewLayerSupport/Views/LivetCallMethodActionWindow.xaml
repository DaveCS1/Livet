<Window
    x:Class="ViewLayerSupport.Views.LivetCallMethodActionWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
    xmlns:v="clr-namespace:ViewLayerSupport.Views"
    xmlns:vm="clr-namespace:ViewLayerSupport.ViewModels"
    Title="LivetCallMethodActionWindow"
    Width="525"
    Height="350">

    <Window.DataContext>
        <vm:LivetCallMethodActionWindowViewModel />
    </Window.DataContext>

    <i:Interaction.Triggers>

        <!--  Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう  -->
        <!--  Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります  -->
        <!--  Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventListenerサポートが追加されています  -->

        <!--  WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます  -->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodName="Initialize" MethodTarget="{Binding}" />
        </i:EventTrigger>

        <!--  Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます  -->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction />
        </i:EventTrigger>

        <!--  WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください  -->

    </i:Interaction.Triggers>

    <StackPanel Margin="10">
        <TextBox x:Name="TextBox">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="TextChanged">
                    <l:LivetCallMethodAction
                        MethodName="TextChanged"
                        MethodParameter="{Binding Text,
                                                  ElementName=TextBox}"
                        MethodTarget="{Binding}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </TextBox>
        <Viewbox>
            <TextBlock Text="{Binding Message}" />
        </Viewbox>
    </StackPanel>
</Window>